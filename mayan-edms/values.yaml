# Default values for mayan-edms.
replicaCount: 1
image: mayanedms/mayanedms
# imageTag: 3.4.6
imagePullPolicy: IfNotPresent
imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

tuning: {}
  # gunicornWorkers: 2
  # fastQueueWorkers: 1
  # mediumQueueWorkers: 1
  # slowQueueWorkers: 1

extraVolumes: []
  # - name: extras
  #   emptyDir: {}
extraVolumeMounts: []
  # - name: extras
  #   mountPath: /usr/share/extras
  #   readOnly: true
extraInitContainers: []
  # - name: do-something
  #   image: busybox
  #   command: ['do', 'something']

startupProbe:
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 27

livenessProbe:
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3

readinessProbe:
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3

postgresql:
  enabled: true
  # nameOverride: postgresql
  postgresqlDatabase: mayan
  postgresqlUsername: mayan
  postgresqlPassword: mayandbpass
  postgresqlPostgresPassword: mayandbpass

rabbitmq:
  enabled: false
  service:
    port: 5672
  replicaCount: 2
  auth:
    username: mayan
    password: mayanrabbitmqpassword

redis:
  enabled: true
  # nameOverride: redis
  auth:
    password: mayanredispassword
  redisPort: 6379
  replica:
    replicaCount: 2
  commonConfiguration: |-
    maxmemory-policy allkeys-lru
    appendonly yes
    save ""
    databases 3

## Broker configuration
broker:
  # type: rabbitmq
  type: redis
  rabbitmqVhost: ''

## Persist document data to object storage
objectstorage:
  enabled: false
  # accessKey: foo
  # secretKey: bar
  # endpointUrl: http://minio-0.minio-svc:9000
  verifyTls: true
  bucketName: mayan-edms-documents
  defaultAcl: private

## Persist document data to a persistent volume
persistence:
  enabled: false
  ## document data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  accessMode: ReadWriteOnce
  size: 8Gi
  annotations: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
  # fsGroup: 999

service:
  type: ClusterIP
  annotations: {}

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
